{"version":3,"sources":["js/views/user.views.js"],"names":["UserView","insertarUsuario","document","getElementById","editarUsuario","eliminarUsuario","listaParametrosCrear","getElementsByClassName","userNameCreate","item","querySelector","userEmailCreate","userAddressCreate","userPhoneCreate","listaParametrosEditar","userNameEdit","userEmailEdit","userAddressEdit","userPhoneEdit","listaEliminar","deleteButton","createUserButton","cancelCreateUserButton","editUserButton","cancelEditUserButton","tablaUsuarios","listaUsuarios","app","listUserCheck","tag","className","element","createElement","classList","add","value","users","firstChild","removeChild","length","forEach","user","li","id","td","checkbox","type","checked","complete","append","td2","refEditar","href","setAttribute","refEditarI","title","textContent","spanUser","spanEmail","spanAddress","spanPhone","push","boldName","name","style","color","boldEmail","email","boldAddress","address","boldPhone","phone","handler","addEventListener","event","_userNameCreate","_userEmailCreate","_userAddressCreate","_userPhoneCreate","_resetInputCrear","preventDefault","target","parentNode","parentElement","_userNameEdit","_userEmailEdit","_userAddressEdit","_userPhoneEdit","_resetInputEditar"],"mappings":"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","file":"user.views.52241a7a.js","sourceRoot":"..","sourcesContent":["/**\n * @class View\n *\n * Visual representation of the model.\n */\nclass UserView {\n  constructor() {\n\n    this.insertarUsuario = document.getElementById('addEmployeeModal');\n    this.editarUsuario = document.getElementById('editEmployeeModal');\n    this.eliminarUsuario = document.getElementById('deleteEmployeeModal');\n\n    //CREAR usuarios\n    this.listaParametrosCrear = this.insertarUsuario.getElementsByClassName('form-group');\n    this.userNameCreate = this.listaParametrosCrear.item(0).querySelector(\"input\");\n    this.userEmailCreate = this.listaParametrosCrear.item(1).querySelector(\"input\");\n    this.userAddressCreate = this.listaParametrosCrear.item(2).querySelector(\"textarea\");\n    this.userPhoneCreate = this.listaParametrosCrear.item(3).querySelector(\"input\");\n\n    //EDITAR usuarios\n    this.listaParametrosEditar = this.editarUsuario.getElementsByClassName('form-group');\n    this.userNameEdit = this.listaParametrosEditar.item(0).querySelector(\"input\");\n    this.userEmailEdit = this.listaParametrosEditar.item(1).querySelector(\"input\");\n    this.userAddressEdit = this.listaParametrosEditar.item(2).querySelector(\"textarea\");\n    this.userPhoneEdit = this.listaParametrosEditar.item(3).querySelector(\"input\");\n\n    //ELIMINAR usuarios\n    this.listaEliminar = this.eliminarUsuario.getElementsByClassName('modal-footer').item(0);\n    this.deleteButton = this.listaEliminar.getElementsByClassName('btn btn-danger').item(0);\n\n    //Botones para CREAR usuarios\n    this.createUserButton = this.insertarUsuario.getElementsByClassName('btn btn-success').item(0);\n    this.cancelCreateUserButton = this.insertarUsuario.getElementsByClassName('btn btn-default').item(0);\n\n    //Botones para EDITAR usuarios\n    this.editUserButton = this.editarUsuario.getElementsByClassName('btn btn-info').item(0);\n    this.cancelEditUserButton = this.editarUsuario.getElementsByClassName('btn btn-default').item(0);\n\n    this.tablaUsuarios = document.getElementById('table-user');\n    this.listaUsuarios = this.tablaUsuarios.querySelector('tbody');\n    //console.log('Lista de usuarios: ', this.listaUsuarios);\n\n    this.app = this.tablaUsuarios.querySelector('tbody');\n    this.listUserCheck = [];\n  }\n\n\n  createElement(tag, className) {\n    const element = document.createElement(tag);\n\n    if (className) element.classList.add(className);\n\n    return element;\n  }\n\n  get _userNameCreate() {\n    return this.userNameCreate.value;\n  }\n\n  get _userNameEdit() {\n    return this.userNameEdit.value;\n  }\n\n  get _userEmailCreate() {\n    return this.userEmailCreate.value;\n  }\n\n  get _userEmailEdit() {\n    return this.userEmailEdit.value;\n  }\n\n  get _userAddressCreate() {\n    return this.userAddressCreate.value;\n  }\n\n  get _userAddressEdit() {\n    return this.userAddressEdit.value;\n  }\n\n  get _userPhoneCreate() {\n    return this.userPhoneCreate.value;\n  }\n\n  get _userPhoneEdit() {\n    return this.userPhoneEdit.value;\n  }\n\n  _resetInputCrear() {\n    this.userNameCreate.value = \"\";\n    this.userEmailCreate.value = \"\";\n    this.userAddressCreate.value = \"\";\n    this.userPhoneCreate.value = \"\";\n  }\n\n  _resetInputEditar() {\n    this.userNameEdit.value = \"\";\n    this.userEmailEdit.value = \"\";\n    this.userAddressEdit.value = \"\";\n    this.userPhoneEdit.value = \"\";\n  }\n\n  displayUsers(users) {\n    // Delete all nodes\n    while (this.listaUsuarios.firstChild) {\n      this.listaUsuarios.removeChild(this.listaUsuarios.firstChild);\n    }\n    this.listUserCheck = [];\n\n    if (users.length > 0) {\n      // Create nodes\n      users.forEach(user => {\n        const li = this.createElement('tr');\n        li.id = user.id;\n\n        const td = this.createElement('td');\n        const checkbox = this.createElement('input');\n        checkbox.type = 'checkbox';\n        checkbox.checked = user.complete;\n        td.append(checkbox);\n\n        const td2 = this.createElement('td');\n\n        //<a href=\"#editEmployeeModal\" class=\"edit\" data-toggle=\"modal\">\n        const refEditar = this.createElement('a');\n        refEditar.href = \"#editEmployeeModal\";\n        refEditar.className = \"edit\";\n        refEditar.setAttribute(\"data-toggle\", \"modal\");\n        //<i class=\"material-icons\"data-toggle=\"tooltip\" title=\"Edit\"> &#xE254; </i></a> */\n        const refEditarI = this.createElement('i');\n        refEditarI.className = \"material-icons\";\n        refEditarI.setAttribute(\"data-toggle\", \"tooltip\");\n        refEditarI.title = 'Edit';\n        refEditarI.textContent = '✎';\n\n        refEditar.append(refEditarI);\n        const deleteButton = this.createElement('button', 'delete');\n        deleteButton.title = 'Delete';\n        deleteButton.textContent = '✖';\n\n        td2.append(deleteButton, refEditar);\n\n        const spanUser = this.createElement('td');\n        const spanEmail = this.createElement('td');\n        const spanAddress = this.createElement('td');\n        const spanPhone = this.createElement('td');\n\n\n        //Si se marca el checkbox se pone en negrita la fuente\n        if (user.complete) {\n          this.listUserCheck.push(user.id);\n          const boldName = this.createElement('b');\n          boldName.textContent = user.name;\n          spanUser.style.color = \"red\";\n          spanUser.append(boldName);\n\n          const boldEmail = this.createElement('b');\n          boldEmail.textContent = user.email;\n          spanEmail.style.color = \"red\";\n          spanEmail.append(boldEmail);\n\n          const boldAddress = this.createElement('b');\n          boldAddress.textContent = user.address;\n          spanAddress.style.color = \"red\";\n          spanAddress.append(boldAddress);\n\n          const boldPhone = this.createElement('b');\n          boldPhone.textContent = user.phone;\n          spanPhone.style.color = \"red\";\n          spanPhone.append(boldPhone);\n        } else {\n          spanUser.textContent = user.name;\n          spanEmail.textContent = user.email;\n          spanAddress.textContent = user.address;\n          spanPhone.textContent = user.phone;\n        }\n\n        li.append(td, spanUser, spanEmail, spanAddress, spanPhone, td2);\n\n        // Append nodes\n        this.app.append(li);\n      });\n\n    }\n  }\n\n  bindAddUserCreate(handler) {\n    this.createUserButton.addEventListener(\"click\", event => {\n      if (this._userNameCreate && this._userEmailCreate && this._userAddressCreate && this._userPhoneCreate) {\n        handler(this._userNameCreate, this._userEmailCreate, this._userAddressCreate, this._userPhoneCreate);\n        this._resetInputCrear();\n      }\n      event.preventDefault();\n    });\n  }\n\n  bindCancelUserCreate() {\n    this.cancelCreateUserButton.addEventListener(\"click\", event => {\n      this._resetInputCrear();\n      event.preventDefault();\n\n    });\n  }\n\n  bindEditUser(handler) {\n    var id;\n    this.listaUsuarios.addEventListener(\"click\", event => {\n      if (event.target.parentNode.className === \"edit\") {\n        id = event.target.parentNode.parentNode.parentElement.id;\n      }\n    });\n    this.editUserButton.addEventListener(\"click\", event => {\n      if (this._userNameEdit && this._userEmailEdit && this._userAddressEdit && this._userPhoneEdit) {\n        handler(id, { ['name']: this._userNameEdit, ['email']: this._userEmailEdit, ['address']: this._userAddressEdit, ['phone']: this._userPhoneEdit });\n\n        this._resetInputEditar();\n      }\n      event.preventDefault();\n    });\n  }\n\n  bindCancelEditUser() {\n    this.cancelEditUserButton.addEventListener(\"click\", event => {\n      event.preventDefault();\n\n      this._resetInputEditar();\n    });\n  }\n\n  bindDeleteUser(handler) {\n    this.listaUsuarios.addEventListener(\"click\", event => {\n      if (event.target.className === \"delete\") {\n        const id = event.target.parentNode.parentElement.id;\n\n        handler(id);\n      }\n    });\n  }\n\n  bindBoldUser(handler) {\n    this.listaUsuarios.addEventListener(\"change\", event => {\n      if (event.target.type === \"checkbox\") {\n        const id = event.target.parentNode.parentElement.id;\n        handler(id);\n      }\n    });\n  }\n\n  //this.cabeceraUsuarios\n  /*bindBoldAllUser(handler) {\n    this.cabeceraUsuarios.addEventListener(\"change\", event => {\n      if (event.target.type === \"checkbox\") {\n        const id = event.target.parentNode.parentElement.id;\n        handler(id);\n      }\n    });\n  }*/\n\n  bindDeleteCheckedUser(handler) {\n    this.deleteButton.addEventListener(\"click\", event => {\n      this.listUserCheck.forEach(function (id) {\n        handler(id);\n      });\n      this.listUserCheck = [];\n      event.preventDefault();\n    });\n  }\n}\n\n"]}